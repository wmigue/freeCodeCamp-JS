// Suma todos los números impares de Fibonacci
// Dado un entero positivo num, devuelve la suma de todos los números impares de Fibonacci que son menores o iguales a num.
// Los dos primeros números de la sucesión de Fibonacci son el 0 y el 1. Cada número adicional en la secuencia es la suma de los dos números anteriores. Los siete primeros números de la sucesión de Fibonacci son 0, 1, 1, 2, 3, 5 y 8.
// Por ejemplo, sumFibs(10) debe devolver 10 porque todos los números impares de Fibonacci menores o iguales a 10 son 1, 1, 3 y 5.

function sumFibs(num) {
  const fiboNumeros = [0, 1];
  let temp = 0
  let sumaImparesMenoresOIgualesANum = 0
  
  while (fiboNumeros.length <= num) {
    temp = fiboNumeros[fiboNumeros.length - 1] + fiboNumeros[fiboNumeros.length - 2];
    fiboNumeros.push(temp);
  }
  
  sumaImparesMenoresOIgualesANum = fiboNumeros.reduce((acc, x)=>{
    if(x % 2 !== 0 && x <= num ){
      return acc + x
    }else{
      return acc
    }
  },0)

   //console.log(fiboNumeros.length)
   //console.log(temp)
   //console.log(fiboNumeros)
  return sumaImparesMenoresOIgualesANum 
}

sumFibs(75024)


// sumFibs(1) debe devolver un número.
// Esperando: sumFibs(1000) debe devolver 1785.
// Esperando: sumFibs(4000000) debe devolver 4613732.
// Esperando: sumFibs(4) debe devolver 5.
// Esperando: sumFibs(75024) debe devolver 60696.
// Esperando: sumFibs(75025) debe devolver 135721.